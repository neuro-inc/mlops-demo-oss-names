kind: live
title: MLOps Demo - OSS - Names

defaults:
  preset: cpu-small
  life_span: 1d

volumes:
  data:
    remote: storage:$[[ flow.project_id ]]/data
    mount: /project/data
    local: data
  code:
    remote: storage:$[[ flow.project_id ]]/rnn
    mount: /project/rnn
    local: rnn
  config:
    remote: storage:$[[ flow.project_id ]]/config
    mount: /project/config
    local: config
  notebooks:
    remote: storage:$[[ flow.project_id ]]/notebooks
    mount: /project/notebooks
    local: notebooks
  results:
    remote: storage:$[[ flow.project_id ]]/results
    mount: /project/results
    local: results
  project:
    remote: storage:$[[ flow.project_id ]]
    mount: /project
    local: .

images:
  myimage:
    ref: image:$[[ flow.project_id ]]:v3
    dockerfile: $[[ flow.workspace ]]/Dockerfile
    context: $[[ flow.workspace ]]/
    build_preset: cpu-small

jobs:

  train:
    image: $[[ images.myimage.ref ]]
    detach: False
    life_span: 10d
    volumes:
      - $[[ upload(volumes.data).ref_ro ]]
      - $[[ upload(volumes.code).ref_ro ]]
      - $[[ upload(volumes.config).ref_ro ]]
      - $[[ volumes.results.ref_rw ]]
    env:
      EXPOSE_SSH: "yes"
      PYTHONPATH: $[[ volumes.code.mount ]]
    params:
      train_iterations: "10000"
    bash: |
        cd $[[ volumes.project.mount ]]
        python -u $[[ volumes.code.mount ]]/char_rnn_classification_tutorial.py \
          --dump_dir $[[ volumes.results.mount ]] --data_path $[[ volumes.data.mount ]] --n_iters $[[ params.train_iterations ]]

  jupyter:
    action: gh:neuro-actions/jupyter@v1.0.0
    args:
      image: $[[ images.myimage.ref ]]
      preset: cpu-small
      multi_args: $[[ multi.args ]]
      volumes_data_remote: $[[ volumes.data.remote ]]
      volumes_code_remote: $[[ volumes.code.remote ]]
      volumes_config_remote: $[[ volumes.config.remote ]]
      volumes_notebooks_remote: $[[ volumes.notebooks.remote ]]
      volumes_results_remote: $[[ volumes.results.remote ]]

  tensorboard:
    action: gh:neuro-actions/tensorboard@v1.0.0
    args:
      volumes_results_remote: $[[ volumes.results.remote ]]

  filebrowser:
    action: gh:neuro-actions/filebrowser@v1.0.0
    args:
      volumes_project_remote: $[[ volumes.project.remote ]]
